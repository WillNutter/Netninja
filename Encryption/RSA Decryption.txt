from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
import base64

def decrypt_rsa(private_key, input_file, output_file):
    """
    Decrypt an RSA-encrypted message from input file and save to output file.
    """
    with open(input_file, 'r') as file:
        encrypted_message = file.read()
    
    rsa_key = RSA.import_key(private_key)
    cipher = PKCS1_OAEP.new(rsa_key)
    decrypted_message = cipher.decrypt(base64.b64decode(encrypted_message))
    
    with open(output_file, 'w') as file:
        file.write(decrypted_message.decode('utf-8'))

# Load private key from file
with open('private_key.pem', 'rb') as file:
    private_key = file.read()

# Decrypt message from input file and save to output file
decrypt_rsa(private_key, 'encrypted.txt', 'decrypted.txt')
